<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manage.cattle.dao.base.UserDao">
    <select id="login" resultType="com.manage.cattle.dto.base.UserDTO">
        select
            id,createUser,createTime,updateUser,updateTime,
            username,name,isSysAdmin,jobCode,
            farmCode,farmPower,phone,expireDate
        from t_user
        where username=#{username} and password=#{password} and expireDate &gt;= now()
    </select>

    <select id="getUser" resultType="com.manage.cattle.dto.base.UserDTO">
        select
            id,createUser,createTime,updateUser,updateTime,
            username,name,isSysAdmin,jobCode,
            farmCode,farmPower,phone,expireDate
        from t_user
        where username=#{username}
    </select>

    <select id="listUser" resultType="com.manage.cattle.dto.base.UserDTO">
        select
            t.id,t.createUser,t.createTime,t.updateUser,t.updateTime,
            t.username,t.name,t.isSysAdmin,t.jobCode,tj.jobName,
            tf.farmCode,tf.farmName,t.farmPower,t.phone,t.expireDate,
            concat(t.username,'(',tf.farmName,'_',tj.jobName,'_',t.name,')') title
        from t_user t
        left join t_sys_job tj on t.jobCode=tj.jobCode
        left join t_farm tf on t.farmCode=tf.farmCode
        where 1=1
        <if test="username!=null and username!=''">
            and t.username like concat('%',#{username},'%')
        </if>
        <if test="name!=null and name!=''">
            and t.name like concat('%',#{name},'%')
        </if>
        <if test="isSysAdmin!=null and isSysAdmin!=''">
            and t.isSysAdmin=#{isSysAdmin}
        </if>
        <if test="jobCode!=null and jobCode!=''">
            and t.jobCode=#{jobCode}
        </if>
        <if test="farmCode!=null and farmCode!=''">
            and t.farmCode=#{farmCode}
        </if>
        <if test="phone!=null and phone!=''">
            and t.phone like concat('%',#{phone},'%')
        </if>
        <if test="expireDateStart!=null and expireDateStart!=''">
            and t.expireDate &gt;= #{expireDateStart}
        </if>
        <if test="expireDateEnd!=null and expireDateEnd!=''">
            and t.expireDate &lt;= #{expireDateEnd}
        </if>
        <if test="noExpire!=null and noExpire=='true'.toString()">
            and t.expireDate &gt;= now()
        </if>
        <if test="usernameList!=null and usernameList.size()>0">
            and t.username in
            <foreach collection="usernameList" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by tf.farmName,t.username
    </select>

    <insert id="addUser">
        insert into t_user(createUser,createTime,updateUser,updateTime,
                           username,password,name,isSysAdmin,
                           jobCode,farmCode,farmPower,
                           phone,expireDate)
        values (#{createUser},now(),#{updateUser},now(),
                #{username},#{password},#{name},#{isSysAdmin},
                #{jobCode},#{farmCode},#{farmPower},
                #{phone},#{expireDate})
    </insert>

    <update id="updateUser">
        update t_user
        set updateUser=#{updateUser},updateTime=now(),
            name=#{name},isSysAdmin=#{isSysAdmin},
            jobCode=#{jobCode},farmCode=#{farmCode},farmPower=#{farmPower},
            phone=#{phone},expireDate=#{expireDate}
        where username=#{username}
    </update>

    <update id="updatePassword">
        update t_user
        set updateUser=#{username},updateTime=now(),password=#{password}
        where username=#{username}
    </update>

    <update id="updatePhone">
        update t_user
        set updateUser=#{username},updateTime=now(),phone=#{phone}
        where username=#{username}
    </update>

    <delete id="delUser">
        delete from t_user
        where username in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>