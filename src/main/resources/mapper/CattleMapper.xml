<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manage.cattle.dao.base.CattleDao">
    <select id="listCattle" resultType="com.manage.cattle.dto.base.CattleDTO">
        select
            c.id,c.createUser,c.createTime,c.updateUser,c.updateTime,
            f.farmId,f.farmName,f.owner farmOwner,f.admin farmAdmin,f.employee farmEmployee,
            fz.farmZoneCode,c.cattleCode,c.cattleName,
            c.breed,sb.value breedValue,c.sex,ss.value sexValue,
            c.birthday,c.remark
        from t_cattle c
        left join t_farm_zone fz on c.farmZoneCode=fz.farmZoneCode
        left join t_farm f on fz.farmId=f.farmId
        left join t_sys_config sb on sb.code='cattleBreed' and c.breed=sb.key
        left join t_sys_config ss on ss.code='cattleSex' and c.sex=ss.key
        where 1=1
        <if test="farmName!=null and farmName!=''">
            and f.farmName like concat('%',#{farmName},'%')
        </if>
        <if test="farmZoneCode!=null and farmZoneCode!=''">
            and fz.farmZoneCode=#{farmZoneCode}
        </if>
        <if test="cattleCode!=null and cattleCode!=''">
            and c.cattleCode like concat('%',#{cattleCode},'%')
        </if>
        <if test="cattleName!=null and cattleName!=''">
            and c.cattleName like concat('%',#{cattleName},'%')
        </if>
        <if test="breed!=null and breed!=''">
            and c.breed=#{breed}
        </if>
        <if test="sex!=null and sex!=''">
            and c.sex=#{sex}
        </if>
        <if test="birthday!=null and birthday!=''">
            and c.birthday=#{birthday}
        </if>
        <if test="remark!=null and remark!=''">
            and c.remark like concat('%',#{remark},'%')
        </if>
        <if test="cattleCodeList!=null and cattleCodeList.size()>0">
            and c.cattleCode in
            <foreach collection="cattleCodeList" item="code" open="(" separator="," close=")">
                #{code}
            </foreach>
        </if>
        <if test="farmZoneCodeList!=null and farmZoneCodeList.size()>0">
            and fz.farmZoneCode in
            <foreach collection="farmZoneCodeList" item="zCode" open="(" separator="," close=")">
                #{zCode}
            </foreach>
        </if>
        order by farmName,farmZoneCode,cattleCode
    </select>

    <select id="getCattle" resultType="com.manage.cattle.dto.base.CattleDTO">
        select
            c.id,c.createUser,c.createTime,c.updateUser,c.updateTime,
            f.farmId,f.farmName,f.owner farmOwner,f.admin farmAdmin,f.employee farmEmployee,
            fz.farmZoneCode,c.cattleCode,c.cattleName,
            c.breed,sb.value breedValue,c.sex,ss.value sexValue,
            c.birthday,c.remark
        from t_cattle c
                 left join t_farm_zone fz on c.farmZoneCode=fz.farmZoneCode
                 left join t_farm f on fz.farmId=f.farmId
                 left join t_sys_config sb on sb.code='cattleBreed' and c.breed=sb.key
                 left join t_sys_config ss on ss.code='cattleSex' and c.sex=ss.key
        where c.cattleCode=#{cattleCode}
    </select>

    <insert id="addCattle">
        insert into t_cattle(createUser,createTime,updateUser,updateTime,
                             farmZoneCode,cattleCode,cattleName,breed,sex,birthday,remark)
        values (#{createUser},now(),#{updateUser},now(),
                #{farmZoneCode},#{cattleCode},#{cattleName},#{breed},#{sex},#{birthday},#{remark})
    </insert>

    <update id="updateCattle">
        update t_cattle
        set updateUser=#{updateUser},updateTime=now(),
            farmZoneCode=#{farmZoneCode},cattleCode=#{cattleCode},cattleName=#{cattleName},
            breed=#{breed},sex=#{sex},birthday=#{birthday},remark=#{remark}
        where cattleCode=#{cattleCode}
    </update>

    <delete id="delCattle">
        delete from t_cattle
        where cattleCode in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>